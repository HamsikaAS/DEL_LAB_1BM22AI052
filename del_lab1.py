# -*- coding: utf-8 -*-
"""del_lab1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nwfgaqqklm_eQ_wmmfiiaSuVzELeZsJg
"""

import numpy as np
import matplotlib.pyplot as plt

#activation function
def threshold(x):
  if x>=0:
    return 1
  else:
    return 0

def sigmoid(x) :
  return 1/(1 + np.exp(-x))

def tanh(x):
  return (np.exp(x) - np.exp(-x))/(np.exp(x) + np.exp(x))

def ReLu(x):
  if x>=0:
    return x
  else:
    return 0

def leaky_ReLu(x):
  if x>=0:
    return x
  else:
    return 0.001*x

x = float(input("enter the value"))
sigmoid(x)

x = np.linspace(-10,10,20)
y=[]
for i in x :
  y.append(threshold(i))
plt.plot(x,y)

x = np.linspace(-10,10,20)
y=[]
for i in x :
  y.append(sigmoid(i))
plt.plot(x,y)

x = np.linspace(-10,10,20)
y=[]
for i in x :
  y.append(ReLu(i))
plt.plot(x,y)

x = np.linspace(-10,10,20)
y=[]
for i in x :
  y.append(leaky_ReLu(i))
plt.plot(x,y)

x = np.linspace(-10,10,20)
y = np.tanh(x)
plt.plot(x,y)

#nueral network

x1 = int(input("enter the 1st input"))
x2 = int(input("enter the 2nd input"))

I = np.matrix([[x1,x2]])
W = np.matrix([[0.5,-0.5]])

H = I*W.T

print(tanh(H[0,0]))

